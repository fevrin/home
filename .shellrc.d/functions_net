#!/bin/bash

# network-related functions

get-public-ip() {
# returns the public ip of the local computer.  help from <http://www.go2linux.org/what-is-my-public-ip-address-with-linux>
#   curl ifconfig.me/all/json
   wget -q -O - icanhazip.com || wget -q -O - ifconfig.co || wget -q -O - checkip.dyndns.org | grep -oE '[0-9.]{7,15}' || curl -s checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #if [[ $(which curl) ]]; then
   #   #curl http://www.whatismyip.com/automation/n09230945.asp ||
   #   curl http://automation.whatismyip.com/n09230945.asp ||
   #   curl http://ip.pipeface.com/ ||
   #   curl -s checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #else
   #   wget -q -O - checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #fi
}

get-ip-location() {
   local data="$(curl -sw "%{response_code}" ifconfig.co/json)"
   local location="$(echo "$data" | sed -re 's;(.*[^0-9])[0-9]+$;\1;')"
   local resp_code="$(echo "$data" | sed -re 's;.*[^0-9]([0-9]+)$;\1;')"

   [[ ! "$resp_code" =~ 200 ]] && {
      local ip="$(get-public-ip)"
      location="$(curl -s -H "User-Agent: keycdn-tools:https://www.example.com" "https://tools.keycdn.com/geo.json?host=${ip}")"
   }

   echo "$location"
}

get-ip-city() {
   local data="$(curl -sw "%{response_code}" https://ifconfig.co/city 2> /dev/null | tr ' ' '+')"
   local city="$(echo "$data" | sed -re 's;(.*[^0-9])[0-9]+$;\1;')"
   local resp_code="$(echo "$data" | sed -re 's;.*[^0-9]([0-9]+)$;\1;')"

   [[ ! "$resp_code" =~ 200 ]] && {
      city="$(get-ip-location | jq -r '.city')"
   }

   echo "$city"
}

count-ips-from-tcpdump() {
   # used to determine source IPs possibly involved in server issues based on overall occurrence in total traffic
   # first run something like this on the server to get good sample data:
   # tcpdump -i eth0 -nnc 1000

   local file="$1"
   [[ -r "$file" ]] || { echo "file doesn't exist or is unreadable!"; return 1; }
   sed -rne "s;.*IP $IP_REGEX\.?.*;\1;p" "$file" | sort | uniq -c | sort -h
}
