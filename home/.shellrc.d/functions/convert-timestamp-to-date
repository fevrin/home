#!/bin/bash

convert-timestamp-to-date() {
   # input: text that includes timestamps in the format of seconds since the UNIX epoc
   #
   # output: the given timestamps converted to dates

   # example:
   #
   # convert-timestamp-to-date <(cat ${file})
   #
   #
   # note: if you prepend the command with QUICK=1, like below, you'll opt for the quicker but less accurate strategy
   #
   # QUICK=1 convert-timestamp-to-date <(cat ${file})

   # inspired by <https://unix.stackexchange.com/questions/306576/how-to-replace-epoch-timestamps-in-a-file-with-other-formats/306581#306581>


   # from `get-logs-for`, these may come in handy:
   # sudo journalctl -xf -t "${service}" |
   #    tee \
   #       >(
   #          awk '
   #             m=gensub(/^.*\{.*timestamp":([0-9]+)[^0-9].*$/,"\\1","g",$0) {
   #                if (m != $0) {
   #                   print gensub(/^.*(\{.*timestamp":)([0-9]+)([^[0-9].*)$/,sprintf("%s\"%s\"%s","\\1",strftime("%Y-%m-%d %H:%M:%S",m),"\\3"),"g")
   #                }
   #             }
   #          ' |
   #              jq --unbuffered .
   #       ) \
   #       >(egrep -v '^$') >/dev/null
   # sudo journalctl -xf -t "${service}" |
   #    tee \
   #       >(sed -urne 's;^.*(\{.*)$;\1;p' | jq --unbuffered '.timestamp |= strftime("%Y-%m-%d %H:%M:%S %Z")') \
   #       >(egrep -v '^$') >/dev/null

   _verify_reqs <<-EOF || return 1
      _get_stdin
      _print_var_vals
	EOF

   local input="$(_get_stdin "${@}")"
   local curdate="$(date +%s)"
   local line

   _print_var_vals 8 output_command

   echo "${input}" | while IFS= read -r line; do
      if [[ ${QUICK} -eq 1 ]]; then
         # convert the timestamp on the line
         # works with just one timestamp on a line
         if [[ ${line} =~ (^|.*[^0-9])([0-9]{10})([^0-9].*|$) ]]; then
            [[ "${BASH_REMATCH[2]}" -le "${curdate}" ]] && {
               line="$(printf '%s%(%F %T)T%s\n' "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" "${BASH_REMATCH[3]}")"
            }
         fi
      else
         # go through all timestamps on a line and convert them
         for timestamp in $(echo "${line}" | egrep -o '\b([0-9]{10})\b'); do
            # weakly validate the timestamp to ensure it wasn't a false positive, like a phone number
            [[ "${timestamp}" -le "${curdate}" ]] && {
               line="${line//${timestamp}/$(date -d @${timestamp} +'%F %T %Z')}"
            }
         done
      fi

      printf '%s\n' "${line}"
   done
}
